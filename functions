#!/bin/bash 

#=======================================================#
# !!!Do Not Modify Codes Below!!!
#=======================================================#

function collect_sys_info(){
    sys_info_log=$1

    nvme list >> ${sys_info_log}
    echo "" >> ${sys_info_log}
    lsblk >> ${sys_info_log}
    echo "" >> ${sys_info_log}
    df -lh >> ${sys_info_log}
    echo "" >> ${sys_info_log}
    free -h >> ${sys_info_log}
    echo "" >> ${sys_info_log}
    lscpu >> ${sys_info_log}
    echo "" >> ${sys_info_log}
    dmidecode >>  ${sys_info_log}
    echo "" >> ${sys_info_log}
}

function collect_drv_info()
{
    disk=$1
    drv_log=${drv_info}/${disk}.log

    sfx-status /dev/$disk > $drv_log
    echo "" >> $drv_log
    nvme smart-log /dev/$disk >> $drv_log
    echo "" >> $drv_log
    nvme id-ctrl /dev/$disk >> $drv_log
    echo "" >> $drv_log

    ctlid=$(echo $disk | grep -oP 'e\K\d+(?=n)')
    address=$(cat /sys/class/nvme/nvme$ctlid/address)
    lspci -s $address -vvv >> $drv_log
    echo "" >> $drv_log
}

function collect_fio_result()
{
    result_file=$1
    output_file=$2
    disk=$3

    pattern=$(sed -n '1p' $result_file | grep -oP 'rw=\K[^,)]+')
    bs=$(sed -n '1p' $result_file | grep -oP '(?<=\(T\) ).*?(?=-)')
    qd=$(sed -n '1p' $result_file | grep -oP '(?<=iodepth=).*')
    numjobs=$(cat $result_file | grep -oP 'Starting \K\d+(?= process)')
    if [[ "$pattern" != "randrw" && "$pattern" != "rw" ]]; then
        # read/write/randwrite/randread
        iops_line_text=$(cat $result_file | grep -E 'write:|read:')
        iops_line_num=$(cat $result_file | grep -En 'write:|read:' | cut -d: -f1)
        lat_line_num=$((iops_line_num + 3))
        lat_line_text=$(sed -n "${lat_line_num}p" $result_file)        
        iops=$(echo $iops_line_text | grep -oP 'IOPS=\K[\d\.]+(?=k)')
        bw=$(echo $iops_line_text | grep -oP '\(\K[0-9.]+(?=MB/s)')
        unit=$(echo $lat_line_text | grep -oP 'lat \(\K[^)]+')
        lat=$(echo $lat_line_text | grep -oP 'avg=\K[\d\.]+(?=,)')
        echo "$disk,$pattern,$bs,$qd,$numjobs,$iops,$bw,$lat,$unit" >> $output_file
    else
        # rw/randrw
        iops_line_text=$(cat $result_file | grep -E 'read:')
        iops_line_num=$(cat $result_file | grep -En 'read:' | cut -d: -f1)
        lat_line_num=$((iops_line_num + 3))
        lat_line_text=$(sed -n "${lat_line_num}p" $result_file)
        iops=$(echo $iops_line_text | grep -oP 'IOPS=\K[\d\.]+(?=k)')
        bw=$(echo $iops_line_text | grep -oP '\(\K[0-9.]+(?=MB/s)')
        unit=$(echo $lat_line_text | grep -oP 'lat \(\K[^)]+')
        lat=$(echo $lat_line_text | grep -oP 'avg=\K[\d\.]+(?=,)')
        echo "$disk,${pattern}_read,$bs,$qd,$numjobs,$iops,$bw,$lat,$unit" >> $output_file
        
        iops_line_text=$(cat $result_file | grep -E 'write:')
        iops_line_num=$(cat $result_file | grep -En 'write:' | cut -d: -f1)
        lat_line_num=$((iops_line_num + 3))
        lat_line_text=$(sed -n "${lat_line_num}p" $result_file)
        iops=$(echo $iops_line_text | grep -oP 'IOPS=\K[\d\.]+(?=k)')
        bw=$(echo $iops_line_text | grep -oP '\(\K[0-9.]+(?=MB/s)')
        unit=$(echo $lat_line_text | grep -oP 'lat \(\K[^)]+')
        lat=$(echo $lat_line_text | grep -oP 'avg=\K[\d\.]+(?=,)')
        echo "$disk,${pattern}_write,$bs,$qd,$numjobs,$iops,$bw,$lat,$unit" >> $output_file
    fi
}